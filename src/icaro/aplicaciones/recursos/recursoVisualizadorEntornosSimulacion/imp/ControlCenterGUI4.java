/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ControlCenterGui2.java
 *
 * Created on 29-dic-2011, 20:42:57
 */
package icaro.aplicaciones.recursos.recursoVisualizadorEntornosSimulacion.imp;

import icaro.aplicaciones.Rosace.informacion.VocabularioRosace;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author FGarijo
 */
public class ControlCenterGUI4 extends javax.swing.JFrame {

    /** Creates new form ControlCenterGui2 */
    private NotificadorInfoUsuarioSimulador notifEvts;
    private int intervaloSecuencia = 10000; // valor por defecto. Eso deberia ponerse en otro sitio
    private int numMensajesEnviar = 3;
    private boolean primeraVictima = true;
    private VisorEscenariosRosace visorSc;
    private ArrayList identsRobotsEquipo ;
    public ControlCenterGUI4() {
        initComponents();
       
    }
    public ControlCenterGUI4( NotificadorInfoUsuarioSimulador notifEvt) {
        this.notifEvts = notifEvt;
        this.identsRobotsEquipo =identsRobotsEquipo;
 //       this.cgen = cgenRec;
 //       this.visorSc = visorScn;
        initComponents();
         jButtonStart.setEnabled(false);
         listaComponentes.setVisible(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        sendVictimButton = new javax.swing.JButton();
        sendVictimsSequence = new javax.swing.JButton();
        intervalTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButtonStart = new javax.swing.JButton();
        jStop = new javax.swing.JButton();
        jstopRobot = new javax.swing.JButton();
        showScenariojButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaComponentes = new javax.swing.JList();

        jLabel2.setText("jLabel2");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("jCheckBoxMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        sendVictimButton.setText("Send Victim");
        sendVictimButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendVictimButtonActionPerformed(evt);
            }
        });

        sendVictimsSequence.setText("Send Victims Sequence");
        sendVictimsSequence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendVictimsSequenceActionPerformed(evt);
            }
        });

        jLabel1.setText("Intervalo (ms)");

        jButtonStart.setText("Start");
        jButtonStart.setNextFocusableComponent(jStop);
        jButtonStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStartActionPerformed(evt);
            }
        });

        jStop.setText("Stop");
        jStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jStopActionPerformed(evt);
            }
        });

        jstopRobot.setBackground(new java.awt.Color(204, 255, 153));
        jstopRobot.setText("Stop Robot");
        jstopRobot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jstopRobotActionPerformed(evt);
            }
        });

        showScenariojButton2.setBackground(new java.awt.Color(204, 255, 153));
        showScenariojButton2.setText("Show Scenario");
        showScenariojButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showScenariojButton2ActionPerformed(evt);
            }
        });

        listaComponentes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaComponentesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listaComponentes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonStart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jStop))
                    .addComponent(intervalTextField)
                    .addComponent(sendVictimsSequence, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sendVictimButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jstopRobot)
                            .addComponent(showScenariojButton2))
                        .addGap(42, 42, 42))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(showScenariojButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jstopRobot)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(sendVictimButton)
                        .addGap(30, 30, 30)
                        .addComponent(sendVictimsSequence)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(intervalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonStart)
                            .addComponent(jStop))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendVictimButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendVictimButtonActionPerformed
          
  //        notifEvts.sendInitialRobotCoordenates();
            notifEvts.sendPeticionSimulacionVictimToRobotTeam();
   //         primeraVictima = false;
  //          sendVictimButton.setEnabled(false); 
           
           
    }//GEN-LAST:event_sendVictimButtonActionPerformed

    private void sendVictimsSequenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendVictimsSequenceActionPerformed
         // Se recoge la informacion que  se debe enviar y se utiliza la clase Notificaciones para enviarlo
         System.out.println("Ha pulsado el bot√≥n send victims");
         String valor ; 
         setLocationRelativeTo(this);
         
//         String smsg = "Puede cambiar el valor en milisegundos en que deben enviarse las coordenadas";

         String smsg = "Este es el valor en milisegundos leido de la propiedad global \nintervaloMilisegundosEnvioMensajesDesdeCC establecido \n en la descripcion de la organizacion lanzada";         		 
         valor = JOptionPane.showInputDialog(rootPane, smsg, intervaloSecuencia);


          //         String valor = JOptionPane.showInputDialog("Introduce el valor en milisegundos en que deben enviarse las coordenadas");
         //intervalTextField.setText(valor);
        // int v = 0;
          if(valor!=null){
                 try{
                    intervaloSecuencia = Integer.parseInt(valor);
                    intervalTextField.setText(""+intervaloSecuencia);
                 }catch(Exception e){
                     System.out.println("El valor debe ser  un numero entero");
                     intervaloSecuencia = 0;
                 }
          }
         while (intervaloSecuencia == 0 ){
             valor = JOptionPane.showInputDialog(rootPane, "El valor debe ser  un numero entero. Introduzca de nuevo el valor del intervalo");
             System.out.println("El valor ha sido : "+valor);
             //intervaloSecuencia = Integer.getInteger(valor) ;
             //if (intervaloSecuencia == null)valor = "";
             if(valor!=null){
                 try{
                    intervaloSecuencia = Integer.parseInt(valor);
                    intervalTextField.setText(""+intervaloSecuencia);
                 }catch(Exception e){
                     System.out.println("El valor debe ser  un numero entero");
                     intervaloSecuencia = 0;
                 }
             }else {
                 intervaloSecuencia = 1;// si es null es que se ha cancelado y hay que salir
             }
         }
//         if(valor==null){System.out.println("Se ha cancelado");};
         
         //System.out.println("El valor ha sido : "+valor);
         jButtonStart.setEnabled(true);
         
//            intervalTextField.setOpaque(true);
//            intervalTextField.setVisible(true);
//        }
//         intervalTextField.requestFocusInWindow();
//         notifEvts.sendInitialRobotCoordenates();
//         notifEvts.sendFirstSimulatedVictimToRobotTeam();
//         sendVictimsSequence.setEnabled(false); 
    }//GEN-LAST:event_sendVictimsSequenceActionPerformed

    private void jButtonStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStartActionPerformed
        // TODO add your handling code here:
         
        notifEvts.sendPeticionSimulacionSecuenciaVictimasToRobotTeam(intervaloSecuencia);
    }//GEN-LAST:event_jButtonStartActionPerformed

    private void jStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jStopActionPerformed
        // TODO add your handling code here:
        notifEvts.sendPeticionPararSimulacion();
    }//GEN-LAST:event_jStopActionPerformed

    private void jstopRobotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jstopRobotActionPerformed
        // TODO add your handling code here:
//        this.visorSc.setVisible(true);
//        this.visorSc.setExtendedState(this.visorSc.ICONIFIED);
        listaComponentes.setVisible(true);
        if ( identsRobotsEquipo == null)
        notifEvts.sendPeticionAgteControlador(VocabularioRosace.PeticionAgteControlSimul.enviarIdentsEquipo);
        else this.listaComponentes.setListData(identsRobotsEquipo.toArray());
        
    }//GEN-LAST:event_jstopRobotActionPerformed

    private void showScenariojButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showScenariojButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showScenariojButton2ActionPerformed

    private void listaComponentesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaComponentesMouseClicked
    if (evt.getClickCount() == 2) {
    	            int index = listaComponentes.locationToIndex(evt.getPoint());
    	        notifEvts.sendPeticionPararAgente ((String)identsRobotsEquipo.get(index));
    	       //      clasificadorV.muestraVentanaEspecifica(listaComponentes.getSelectedValue().toString());
                     
    	          }
    }//GEN-LAST:event_listaComponentesMouseClicked
    private void setIntervaloEnvioMensajesDesdeCC(int intervalo){
		intervaloSecuencia = intervalo ;
		int intervaloEnvioMensajesDesdeCC = 1000;
		String strintervaloEnvioMensajesDesdeCC = "";
    }
    public void visualizarIdentsEquipoRobot ( ArrayList<String> equipoIds){
//        eqipoIds = eqipoIds.toArray();
        identsRobotsEquipo = equipoIds;
        this.listaComponentes.setListData(identsRobotsEquipo.toArray());
        listaComponentes.setVisible(true);
}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ControlCenterGUI4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ControlCenterGUI4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ControlCenterGUI4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ControlCenterGUI4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new ControlCenterGUI4().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField intervalTextField;
    private javax.swing.JButton jButtonStart;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jStop;
    private javax.swing.JButton jstopRobot;
    private javax.swing.JList listaComponentes;
    private javax.swing.JButton sendVictimButton;
    private javax.swing.JButton sendVictimsSequence;
    private javax.swing.JButton showScenariojButton2;
    // End of variables declaration//GEN-END:variables
}
